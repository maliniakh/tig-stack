# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply prepend
# them with $. For strings the variable must be within quotes (ie, "$STR_VAR"),
# for numbers and booleans they should be plain (ie, $INT_VAR, $BOOL_VAR)

# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "1s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at
  ## most metric_batch_size metrics.
  metric_batch_size = 1000
  ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
  ## output, and will flush this buffer on a successful write. Oldest metrics
  ## are dropped first when this buffer fills.
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "1s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## By default, precision will be set to the same timestamp order as the
  ## collection interval, with the maximum being 1s.
  ## Precision will NOT be used for service inputs, such as logparser and statsd.
  ## Valid values are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""
  ## Run telegraf in debug mode
  debug = false
  ## Run telegraf in quiet mode
  quiet = false
  ## Override default hostname, if empty use os.Hostname()
  hostname = "${HOST_NAME}"
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for influxdb server to send metrics to
[[outputs.influxdb]]
  ## The full HTTP or UDP endpoint URL for your InfluxDB instance.
  ## Multiple urls can be specified as part of the same cluster,
  ## this means that only ONE of the urls will be written to each interval.
  # urls = ["udp://localhost:8089"] # UDP endpoint example
  urls = ["http://${INFLUXDB_HOST}:${INFLUXDB_PORT}"] # required
  ## The target database for metrics (telegraf will create it if not exists).
  database = "${DATABASE}" # required

  ## Retention policy to write to. Empty string writes to the default rp.
  retention_policy = ""
  ## Write consistency (clusters only), can be: "any", "one", "quorum", "all"
  write_consistency = "any"

  ## Write timeout (for the InfluxDB client), formatted as a string.
  ## If not provided, will default to 5s. 0s means no timeout (not recommended).
  timeout = "5s"
  # username = "telegraf"
  # password = "metricsmetricsmetricsmetrics"
  ## Set the user agent for HTTP POSTs (can be useful for log differentiation)
  # user_agent = "telegraf"
  ## Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)
  # udp_payload = 512

  ## Optional SSL Config
  # ssl_ca = "/etc/telegraf/ca.pem"
  # ssl_cert = "/etc/telegraf/cert.pem"
  # ssl_key = "/etc/telegraf/key.pem"
  ## Use SSL but skip chain & host verification
  # insecure_skip_verify = false


# Read metrics about memory usage
[[inputs.mem]]
  # no configuration

[[inputs.jolokia2_agent]]
  urls = ["http://172.17.0.1:20005/jolokia"]
  [[inputs.jolokia2_agent.metric]]
   name = "broker_checkpointingRate"
   mbean  = "net.corda:name=Checkpointing Rate,type=Flows"
   paths = ["RateUnit","OneMinuteRate","Count","FifteenMinuteRate","FiveMinuteRate","MeanRate"]

  [[inputs.jolokia2_agent.metric]]
   name = "broker_finishedFlow"
   mbean  = "net.corda:name=Finished,type=Flows"
   paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
   name = "broker_inFlightFlow"
   mbean  = "net.corda:name=InFlight,type=Flows"
   paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
   name = "broker_startedFlow"
   mbean  = "net.corda:name=Started,type=Flows"
   paths = ["Count"]

[[inputs.jolokia2_agent]]
  urls = ["http://172.17.0.1:20007/jolokia"]
  [[inputs.jolokia2_agent.metric]]
   name = "insurer_checkpointingRate"
   mbean  = "net.corda:name=Checkpointing Rate,type=Flows"
   paths = ["RateUnit","OneMinuteRate","Count","FifteenMinuteRate","FiveMinuteRate","MeanRate"]

  [[inputs.jolokia2_agent.metric]]
   name = "insurer_finishedFlow"
   mbean  = "net.corda:name=Finished,type=Flows"
   paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
   name = "insurer_inFlightFlow"
   mbean  = "net.corda:name=InFlight,type=Flows"
   paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
   name = "insurer_startedFlow"
   mbean  = "net.corda:name=Started,type=Flows"
   paths = ["Count"]

[[inputs.jolokia2_agent]]
  urls = ["http://172.17.0.1:20009/jolokia"]
  [[inputs.jolokia2_agent.metric]]
   name = "mnc_checkpointingRate"
   mbean  = "net.corda:name=Checkpointing Rate,type=Flows"
   paths = ["RateUnit","OneMinuteRate","Count","FifteenMinuteRate","FiveMinuteRate","MeanRate"]

  [[inputs.jolokia2_agent.metric]]
   name = "mnc_finishedFlow"
   mbean  = "net.corda:name=Finished,type=Flows"
   paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
   name = "mnc_inFlightFlow"
   mbean  = "net.corda:name=InFlight,type=Flows"
   paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
   name = "mnc_startedFlow"
   mbean  = "net.corda:name=Started,type=Flows"
   paths = ["Count"]

[[inputs.jolokia2_agent]]
  urls = ["http://172.17.0.1:20011/jolokia"]
  [[inputs.jolokia2_agent.metric]]
   name = "operator_checkpointingRate"
   mbean  = "net.corda:name=Checkpointing Rate,type=Flows"
   paths = ["RateUnit","OneMinuteRate","Count","FifteenMinuteRate","FiveMinuteRate","MeanRate"]

  [[inputs.jolokia2_agent.metric]]
   name = "operator_finishedFlow"
   mbean  = "net.corda:name=Finished,type=Flows"
   paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
   name = "operator_inFlightFlow"
   mbean  = "net.corda:name=InFlight,type=Flows"
   paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
   name = "operator_startedFlow"
   mbean  = "net.corda:name=Started,type=Flows"
   paths = ["Count"]

[[inputs.jolokia2_agent]]
  urls = ["http://172.17.0.1:20013/jolokia"]
  [[inputs.jolokia2_agent.metric]]
   name = "reinsurer_checkpointingRate"
   mbean  = "net.corda:name=Checkpointing Rate,type=Flows"
   paths = ["RateUnit","OneMinuteRate","Count","FifteenMinuteRate","FiveMinuteRate","MeanRate"]

  [[inputs.jolokia2_agent.metric]]
   name = "reinsurer_finishedFlow"
   mbean  = "net.corda:name=Finished,type=Flows"
   paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
   name = "reinsurer_inFlightFlow"
   mbean  = "net.corda:name=InFlight,type=Flows"
   paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
   name = "reinsurer_startedFlow"
   mbean  = "net.corda:name=Started,type=Flows"
   paths = ["Count"]

[[inputs.jolokia2_agent]]
  urls = ["http://172.17.0.1:20015/jolokia"]
  [[inputs.jolokia2_agent.metric]]
   name = "services_checkpointingRate"
   mbean  = "net.corda:name=Checkpointing Rate,type=Flows"
   paths = ["RateUnit","OneMinuteRate","Count","FifteenMinuteRate","FiveMinuteRate","MeanRate"]

  [[inputs.jolokia2_agent.metric]]
   name = "services_finishedFlow"
   mbean  = "net.corda:name=Finished,type=Flows"
   paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
   name = "services_inFlightFlow"
   mbean  = "net.corda:name=InFlight,type=Flows"
   paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
   name = "services_startedFlow"
   mbean  = "net.corda:name=Started,type=Flows"
   paths = ["Count"]

[[inputs.jolokia2_agent]]
  urls = ["http://172.17.0.1:20016/jolokia"]
  [[inputs.jolokia2_agent.metric]]
   name = "wholesaleBroker_checkpointingRate"
   mbean  = "net.corda:name=Checkpointing Rate,type=Flows"
   paths = ["RateUnit","OneMinuteRate","Count","FifteenMinuteRate","FiveMinuteRate","MeanRate"]

  [[inputs.jolokia2_agent.metric]]
   name = "wholesaleBroker_finishedFlow"
   mbean  = "net.corda:name=Finished,type=Flows"
   paths = ["Count"]

  [[inputs.jolokia2_agent.metric]]
   name = "wholesaleBroker_inFlightFlow"
   mbean  = "net.corda:name=InFlight,type=Flows"
   paths = ["Value"]

  [[inputs.jolokia2_agent.metric]]
   name = "wholesaleBroker_startedFlow"
   mbean  = "net.corda:name=Started,type=Flows"
   paths = ["Count"]
